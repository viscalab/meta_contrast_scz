---
title: "Untitled"
format: html
editor: visual
---

## Three-level meta-analysis

```{r}
studies_es_chronic <- studies_es |> 
      filter(!(study %in% c("2021a Shoshina", "2010 Kiss", "2024 Kadivar"))) |> 
  anti_join(studies_es_without_sf)
  
meta_all_samples <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML")

meta_all_samples
```

```{r}
meta_all_samples$pval
```

## Heterogeneity

```{r}
var.comp(meta_all_samples)
```

## CPZ

```{r}
meta_all_samples_cpz <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ cpz)

meta_all_samples_cpz
```

```{r}
meta_all_samples_cpz_sf_tf <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ cpz * sf* tf)

meta_all_samples_cpz_sf_tf
```

```{r}
meta_all_samples_cpz_sf_tf$ci.lb
```

```{r}
meta_all_samples_cpz_sf_tf$ci.ub
```

```{r}
meta_all_samples_cpz_sf_tf |> tidy()
```

```{r}
studies_es_chronic_sf_median <- studies_es_chronic |> 
  summarise(sf_median = median(sf)) |> 
  pull()

studies_es_chronic_sf_discr <- studies_es_chronic |> 
  mutate(sf_discr = if_else(sf <= studies_es_chronic_sf_median, "low", "high")) 
```

```{r}
meta_all_samples_cpz_low_sf <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic_sf_discr |> 
                     filter(sf_discr == "low"),
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ cpz)

meta_all_samples_cpz_low_sf
```

```{r}
meta_all_samples_cpz_high_sf <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic_sf_discr |> 
                     filter(sf_discr == "high"),
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ cpz)

meta_all_samples_cpz_high_sf
```

```{r}
regre_p_meta_all_samples_sf_discr_cpz <- bind_rows(
  meta_all_samples_cpz_low_sf |> 
    tidy() |> 
    mutate(sf_discr = "low") |> 
    select(sf_discr, term, estimate),
  meta_all_samples_cpz_high_sf |> 
    tidy() |> 
    mutate(sf_discr = "high") |> 
    select(sf_discr, term, estimate)) |> 
  group_by(sf_discr) |> 
  pivot_wider(names_from = term, values_from = estimate) |> 
  mutate(sf_discr = if_else(sf_discr == "low", 
                            "Low spatial frequencies", 
                            "High spatial frequencies")) |> 
  mutate(sf_discr = fct_relevel(sf_discr, "Low spatial frequencies"))



p_meta_all_samples_sf_discr_cpz <- ggplot(
  studies_es_chronic_sf_discr |> 
    mutate(sf_discr = if_else(sf_discr == "low", 
                              "Low spatial frequencies",
                              "High spatial frequencies")) |> 
    mutate(sf_discr = fct_relevel(sf_discr, "Low spatial frequencies")) |> 
    drop_na(cpz)
  ) +
  facet_wrap(vars(sf_discr)) +
  geom_abline(data = regre_p_meta_all_samples_sf_discr_cpz,
              aes(intercept = intercept,
                  slope = cpz)) +
  geom_point(aes(x = cpz, y = es), shape = 1, alpha = .5) +
  labs(x = LABEL_CPZ, y = LABEL_EFFECT_SIZE) +
  theme_classic() +
  theme(axis.line = element_line(linewidth = WIDTH_AXIS),
        axis.ticks = element_line(linewidth = WIDTH_AXIS), 
        strip.background = element_blank())

p_meta_all_samples_sf_discr_cpz

ggsave("figures/paper/sup/p_all_samples_tf_sf.png", p_meta_all_samples_sf_discr_cpz, 
       width = 4, height = 2.5)
ggsave("figures/paper/sup/p_all_samples_tf_sf.pdf", p_meta_all_samples_sf_discr_cpz, 
       width = 4, height = 2.5)
```

## SF

```{r}
meta_all_samples_sf <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ sf)

meta_all_samples_sf 
```

```{r}
var.comp(meta_all_samples_sf)
```

```{r}
p_meta_all_samples_sf <- ggplot(studies_es_chronic) +
      geom_abline(intercept = meta_all_samples_sf |> 
                tidy() |> 
                filter(term == "intercept") |> 
                pull(estimate), 
              slope = meta_all_samples_sf |> 
                tidy() |> 
                filter(term == "sf") |> 
                pull(estimate), 
              color = "grey") +
  geom_point(aes(x = sf, y = es), shape = 1, alpha = .5) +
  labs(x = LABEL_SPATIAL_FREQUENCY, y = LABEL_EFFECT_SIZE) +
  theme_classic() +
  theme(axis.line = element_line(linewidth = WIDTH_AXIS),
        axis.ticks = element_line(linewidth = WIDTH_AXIS))

p_meta_all_samples_sf
```

```{r}
meta_all_samples_tf <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ tf)

meta_all_samples_tf
```

```{r}
p_meta_all_samples_tf <- ggplot(studies_es_chronic) +
      geom_abline(intercept = meta_all_samples_tf |> 
                tidy() |> 
                filter(term == "intercept") |> 
                pull(estimate), 
              slope = meta_all_samples_tf |> 
                tidy() |> 
                filter(term == "tf") |> 
                pull(estimate), 
              color = "grey") +
  geom_point(aes(x = tf, y = es), shape = 1, alpha = .5) +
  labs(x = LABEL_TEMPORAL_FREQUENCY, y = LABEL_EFFECT_SIZE) +
  theme_classic() +
  theme(axis.line = element_line(linewidth = WIDTH_AXIS),
        axis.ticks = element_line(linewidth = WIDTH_AXIS))

p_meta_all_samples_tf
```

## Figure tf and sf

```{r}
p_all_samples_tf_sf <- plot_grid(
  p_meta_all_samples_sf,
  p_meta_all_samples_tf, 
  labels = "AUTO")

ggsave("figures/paper/p_all_samples_tf_sf.pdf",
       p_all_samples_tf_sf, 
       width = 4.9, 
       height = 2.45
       )

ggsave("figures/paper/p_all_samples_tf_sf.png", p_all_samples_tf_sf, 
       width = 4.9, height = 2.45)
```

## Testing the interaction of dv with spatial frequency

```{r}
studies_one_sample_chronic |> 
  group_by(dv) |> 
  count()
```

```{r}
sf_dv_interact <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ sf * dv) 
sf_dv_interact
```

```{r}
anova(sf_dv_interact, btt = 5:6)
```

```{r}
sf_dv_interact_only_cs <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic |> 
                     filter(dv != "thre"),
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ sf * dv) 

sf_dv_interact_only_cs
```

```{r}
anova(sf_dv_interact_only_cs, btt = 4)
```
