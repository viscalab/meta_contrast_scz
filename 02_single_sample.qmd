---
title: "Untitled"
format: html
editor: visual
---

## Temporal and spatial frequencies used

```{r}
studies_es_without_sf <- studies_es |> 
  filter(study %in% studies_no_sf) 
```

```{r}
studies_es_sf <- studies_es |> 
  anti_join(studies_es_without_sf) |> 
  mutate(sf_mode = as.numeric(Mode(sf))) |> 
  mutate(dist_mode = abs(sf - sf_mode)) |> 
  group_by(study) |> 
  mutate(min_dist_mode = min(dist_mode)) |> 
  mutate(used = (dist_mode == min_dist_mode)) |> 
  relocate(used, .after = study) |> 
  mutate(used = if_else(study == "2011 Chen" & sf == 0.5, FALSE, used)) |> 
  mutate(used = if_else(study == "2011 Chen" & sf == 4, TRUE, used)) |> 
  mutate(used = if_else(study == "2013 Kelemen" & sf == 0.3, FALSE, used)) |> 
  mutate(used = if_else(study == "2013 Kelemen" & sf == 10, TRUE, used))

studies_es_tf <- studies_es |> 
  anti_join(studies_es_without_sf)|> 
  mutate(tf_mode = as.numeric(Mode(tf))) |> 
  mutate(dist_mode = abs(tf - tf_mode)) |> 
  group_by(study, sf) |> 
  mutate(min_dist_mode = min(dist_mode)) |> 
  mutate(used = (dist_mode == min_dist_mode)) |> 
  relocate(used, .after = study) |> 
  mutate(used = if_else(study == "2011 Chen" & sf == 0.5, FALSE, used)) |> 
  mutate(used = if_else(study == "2013 Kelemen" & sf == 0.3, FALSE, used)) 
  
```

```{r}
tf_mode <- studies_es_tf |> 
  ungroup() |> 
  slice(1:1) |> 
  select(tf_mode) |> 
  pull(tf_mode)

sf_mode <- studies_es_sf |> 
  ungroup() |> 
  slice(1:1) |> 
  select(sf_mode) |> 
  pull(sf_mode)
```

Number of studies that use the modes

```{r}
n_tf_mode <-  studies_es |> 
  filter(tf == tf_mode) |> 
  distinct(study) |> 
  nrow()

n_sf_mode <- studies_es |> 
  filter(sf == sf_mode) |> 
  distinct(study) |> 
  nrow()
```

```{r}
n_studies_more_than_one_sf <- studies_es |> 
  select(study, sf) |> 
  group_by(study) |> 
  distinct(sf) |> 
  summarise(n = n()) |> 
  filter(n > 1) |> 
  nrow()

n_studies_more_than_one_tf <- studies_es |> 
  select(study, tf) |> 
  group_by(study) |> 
  distinct(tf) |> 
  summarise(n = n()) |> 
  filter(n > 1) |> 
  nrow()

```

```{r}
p_tf_used <- studies_es_tf |> 
  mutate(used = if_else(used, "Considered temporal frequency", "Other temporal frequencies")) |> 
  ggplot(aes(x = study, y = tf, color = used, shape = used)) +
  geom_point() + 
  coord_flip() + 
  scale_x_discrete(limits = rev) +
  labs(y = LABEL_TEMPORAL_FREQUENCY) +
  scale_color_brewer(type = "qual", palette = "Set1") +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        legend.position = "top",
        legend.direction = "vertical",
        legend.title = element_blank())

p_sf_used <- studies_es_sf |> 
  mutate(used = if_else(used, "Considered spatial frequency", "Other spatial frequencies")) |> 
  ggplot(aes(x = study, y = sf, color = used, shape = used)) +
  geom_point() +
  coord_flip() + 
  scale_x_discrete(limits = rev) +
  labs(y = LABEL_SPATIAL_FREQUENCY) +
  scale_color_brewer(type = "qual", palette = "Set1") +
  theme_minimal() +
  theme(axis.title.y = element_blank(),
        legend.position = "top",
        legend.direction = "vertical",
        legend.title = element_blank(), 
        axis.line.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        )

p_tf_sf <- plot_grid(
  p_tf_used,
  p_sf_used, 
  rel_widths = c(.55, .45))

ggsave("figures/paper/sup/p_tf_sf.pdf", p_tf_sf, width = 7.2, height = 7.5)

ggsave("figures/paper/sup/p_tf_sf.png", p_tf_sf, width = 7.2, height = 7.5)

```

## Meta-analysis all

Selecting the samples

```{r}
studies_es_one_sf <- studies_es_sf |> 
  filter(used) |> 
  select(study, sf, tf)
  
studies_one_sample <- studies_es_tf |> 
  filter(used) |> 
  semi_join(studies_es_one_sf,
            by = join_by(study, sf, tf)) |> 
  bind_rows(studies_es_without_sf) |> # adding studies that do not have SF
  arrange(study)
  
```

Performing meta-analysis

```{r}
meta_one_sample <- metagen(TE = es, seTE = se, 
                           studlab = study, 
                           fixed = FALSE, 
                           random = TRUE,
                           sm = "SMD", 
                           hakn = TRUE,
                           data = studies_one_sample)

meta_one_sample
```

```{r}
meta_one_sample$pval.random
```

```{r}
meta_one_sample$pval.Q
```

```{r}
p_one_sample_forest <- as.ggplot(
  ~forest(meta_one_sample,
          print.tau2 = FALSE, 
          print.I2 = FALSE, 
          print.pval.Q = FALSE, 
          fontsize = 12, 
          xlab = "g",
          smlab = "",
          leftcols = c("studlab", "sample.size"),
          leftlabs = c("Study", "Sample size"),
          rightlabs = c("g", "95% CI", "Weight")), 
  scale = 1, hjust = 0, vjust = 0.04)


ggsave("figures/paper/sup/p_forest_all.pdf", p_one_sample_forest, 
       width = 8, height = 11.1)

ggsave("figures/paper/sup/p_forest_all.png", p_one_sample_forest, 
       width = 8, height = 11.1)
```

### Medication

```{r}
meta_one_sample_cpz <- metareg(meta_one_sample, ~ cpz)

meta_one_sample_cpz
```

### Proportion of medicated patients

```{r}
meta_one_sample_p_med <- metareg(meta_one_sample, ~ p_med)

meta_one_sample_p_med
```

### Outliers and influential cases

```{r}
meta_one_sample_influential <- InfluenceAnalysis(meta_one_sample, random = TRUE)

data_p_influential <- meta_one_sample_influential$Data |> 
  mutate(Author = str_remove_all(Author, "Omitting ")) 

p_influential <- ggplot() +
  geom_text_repel(data = data_p_influential |> 
                    filter(HetContrib > 23), 
                  aes(x = HetContrib, y = InfluenceEffectSize, 
                      label = Author), max.overlaps = 3) +
  geom_point(data = data_p_influential, 
             aes(x = HetContrib, y = InfluenceEffectSize), alpha = .5)  +
  labs(x = "Overall heterogeneity contribution", y = "Influence on pooled result") +
  theme_classic(14) +
    theme(axis.line = element_line(linewidth = WIDTH_AXIS),
        axis.ticks = element_line(linewidth = WIDTH_AXIS), 
        legend.position = "none")

p_influential
```

## Chronic patients

```{r}
studies_one_sample_chronic <- studies_one_sample |> 
  filter(!(study %in% c("2021a Shoshina", "2010 Kiss", "2024 Kadivar")))

meta_one_sample_chronic <- metagen(TE = es, seTE = se, 
                           studlab = study, 
                           fixed = FALSE, 
                           random = TRUE,
                           sm = "SMD", 
                           hakn = TRUE,
                           data = studies_one_sample_chronic)

meta_one_sample_chronic
```

```{r}
meta_one_sample_chronic$pval.random
```

```{r}
meta_one_sample_chronic$pval.Q
```

```{r}
p_one_sample_chronic_forest <- as.ggplot(
  ~forest(meta_one_sample_chronic,
          print.tau2 = FALSE, 
          print.I2 = FALSE, 
          print.pval.Q = FALSE, 
          fontsize = 12, 
          xlab = "g",
          smlab = "",
          leftcols = c("studlab", "sample.size"),
          leftlabs = c("Study", "Sample size"),
          rightlabs = c("g", "95% CI", "Weight")), 
  scale = 2, hjust = 0, vjust = 0.04)
```

### Publication bias

```{r}
eggers.test(meta_one_sample_chronic)
```

```{r}
p_one_sample_funnel <- ggplot() +
  geom_segment(aes(x = meta_one_sample_chronic$TE.random, 
               xend = meta_one_sample_chronic$TE.random, 
               y = 0, yend = .6), color = "grey") +
  geom_segment(aes(x = meta_one_sample_chronic$TE.random, 
               xend = meta_one_sample_chronic$TE.random + 1.96 * .6, 
               y = 0, yend = .6),  color = "grey") +
  geom_segment(aes(x = meta_one_sample_chronic$TE.random, 
               xend = meta_one_sample_chronic$TE.random - 1.96 * .6, 
               y = 0, yend = .6),  color = "grey") +
  geom_point(data = studies_one_sample_chronic, aes(x = es, y = se)) +
  scale_y_reverse(limits = c(.6, 0)) +
  labs(x = LABEL_EFFECT_SIZE, y = "Standard error") +
  theme_classic(16) +
    theme(axis.line = element_line(linewidth = WIDTH_AXIS),
          axis.ticks = element_line(linewidth = WIDTH_AXIS))

p_one_sample_funnel
```

## Age

```{r}
 studies_one_sample_chronic |> 
  drop_na(years_control) |>
  ungroup() |> 
  select(years_control) |> 
  reframe(range = range(years_control), 
          sd = sd(years_control))
```

```{r}
 studies_one_sample_chronic |> 
  drop_na(years_patient) |>
  ungroup() |> 
  select(years_patient) |> 
  reframe(range = range(years_patient), 
          sd = sd(years_patient))

```

```{r}
t.test(
 studies_one_sample_chronic |> 
    drop_na(years_control) |> 
    pull(years_control),
  studies_one_sample_chronic |> 
    drop_na(years_patient) |> 
    pull(years_patient)
)
```

## SES

```{r}
 studies_one_sample_chronic |> 
  drop_na(ses_control) |>
  ungroup() |> 
  select(ses_control) |> 
  reframe(range = range(ses_control), 
          sd = sd(ses_control))
```

```{r}
 studies_one_sample_chronic |> 
  drop_na(ses_patient) |>
  ungroup() |> 
  select(ses_patient) |> 
  reframe(range = range(ses_patient), 
          sd = sd(ses_patient))
```

```{r}
t.test(
  studies_one_sample_chronic |> 
    drop_na(ses_control) |> 
    pull(ses_control),
  studies_one_sample_chronic |> 
    drop_na(ses_patient) |> 
    pull(ses_patient)
)
```

### Medication

CPZ

```{r}
meta_one_sample_chronic_cpz <- metareg(meta_one_sample_chronic, ~ cpz)

meta_one_sample_chronic_cpz
```

```{r}
p_one_sample_cpz <- ggplot(studies_one_sample_chronic |> 
                             drop_na(cpz), 
                           aes(x = cpz, y = es)) +
    geom_abline(intercept = meta_one_sample_chronic_cpz |> 
                tidy() |> 
                filter(term == "intercept") |> 
                pull(estimate), 
              slope = meta_one_sample_cpz |> 
                tidy() |> 
                filter(term == "cpz") |> 
                pull(estimate), 
              color = "grey") +
  geom_point() +
  geom_text_repel(aes (label = study), size = 2.5) +
  labs(x = LABEL_CPZ, y = LABEL_EFFECT_SIZE) +
  theme_classic(16) +
    theme(axis.line = element_line(linewidth = WIDTH_AXIS),
        axis.ticks = element_line(linewidth = WIDTH_AXIS))

p_one_sample_cpz
```

## Main figure

```{r}
p_influential_funnel_cpz <- plot_grid(p_influential, 
                                  p_one_sample_funnel, 
                                  p_one_sample_cpz,
                                  NA,
                                  ncol = 1, 
                                  rel_heights = c(.32, .32, .32, .06),
                                  labels = c("A", "C", "D", ""), 
                                  axis = "l",
                                  align = "v")


p_influential_funnel_forest <- plot_grid(p_influential_funnel_cpz, 
                                         p_one_sample_chronic_forest,
                                         rel_widths = c(.3, .7),
                                         labels = c("", "B"))


ggsave("figures/paper/p_influential_funnel_forest.pdf", p_influential_funnel_forest, 
       width = 12, height = 11)

ggsave("figures/paper/p_influential_funnel_forest.png", p_influential_funnel_forest, 
       width = 12, height = 11)
```

### Proportion of medicated patients

```{r}
meta_one_sample_chronic_p_med <- metareg(meta_one_sample_chronic, ~ p_med)

meta_one_sample_chronic_p_med
```

### Severity of symptons

```{r}
meta_one_sample_chronic_panss <- metareg(meta_one_sample_chronic, ~ panss_t_meta)

meta_one_sample_chronic_panss
```

### Illness duration

```{r}
meta_one_sample_chronic_dur_illness <- metareg(meta_one_sample_chronic, 
                                               ~ dur_illness)

meta_one_sample_chronic_dur_illness
```

### luminance

```{r}
meta_one_sample_chronic_luminance <- metareg(meta_one_sample_chronic, 
                                             ~ luminance)

meta_one_sample_chronic_luminance
```

### duration

```{r}
meta_one_sample_chronic_duration <- metareg(meta_one_sample_chronic, ~ duration)

meta_one_sample_chronic_duration
```

### size

```{r}
meta_one_sample_chronic_size <- metareg(meta_one_sample_chronic, ~ size)

meta_one_sample_chronic_size
```

### age

```{r}
meta_one_sample_chronic_age <- metareg(meta_one_sample_chronic, ~ years_patient)

meta_one_sample_chronic_age
```

### Gender

```{r}
meta_one_sample_chronic_p_gender <- metareg(meta_one_sample_chronic, ~ p_gender)

meta_one_sample_chronic_p_gender
```

### Eccentricity

```{r}
meta_one_sample_chronic_ecc <- metareg(meta_one_sample_chronic, ~ ecc)

meta_one_sample_chronic_ecc
```

```{r}
ggplot(studies_one_sample_chronic |> 
                             drop_na(ecc), 
                           aes(x = ecc, y = es)) +
    geom_abline(intercept = meta_one_sample_chronic_ecc |> 
                tidy() |> 
                filter(term == "intercept") |> 
                pull(estimate), 
              slope = meta_one_sample_chronic_ecc |> 
                tidy() |> 
                filter(term == "ecc") |> 
                pull(estimate), 
              color = "grey") +
  geom_point() +
  geom_text_repel(aes (label = study), size = 2.5) +
  labs(x = "Eccentricity (deg)", y = LABEL_EFFECT_SIZE) +
  theme_classic(16) +
    theme(axis.line = element_line(linewidth = WIDTH_AXIS),
        axis.ticks = element_line(linewidth = WIDTH_AXIS))
```

## Type of task

```{r}
studies_one_sample_chronic |> 
  group_by(task) |> 
  count()
```

```{r}
studies_one_sample_chronic_2AFC <- studies_one_sample_chronic |> 
                             filter(task %in% c("2IFC", "2SFC"))

meta_one_sample_chronic_task <- metagen(TE = es, seTE = se, 
                           studlab = study, 
                           fixed = FALSE, 
                           random = TRUE,
                           sm = "SMD", 
                           hakn = TRUE,
                           data = studies_one_sample_chronic_2AFC)

meta_one_sample_chronic_task
```

```{r}
studies_one_sample_chronic_2AFC |> 
  drop_na(ecc) |> 
  group_by(task) |> 
  summarise(ecc = mean(ecc))
```

```{r}
update(meta_one_sample_chronic_task, 
       subgroup = task, 
       tau.common = FALSE)
```

## Method used

```{r}
n_staircase_studies_one_sample <- studies_one_sample|> 
  filter(method == "staircase") |> 
  nrow()

n_limits_studies_one_sample <- studies_one_sample |> 
  filter(method == "limits") |> 
  nrow()

n_cs_studies_one_sample <- studies_one_sample |> 
  filter(method == "constant stimuli") |> 
  nrow()
```
