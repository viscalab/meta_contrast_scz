---
title: "Untitled"
format: html
editor: visual
---

## Three-level meta-analysis

```{r}
studies_es_chronic <- studies_es |> 
    filter(!(study %in% c("2021a Shoshina", "2010 Kiss")))
  
meta_all_samples <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML")

meta_all_samples
```

```{r}
meta_all_samples$pval
```


## Heterogeneity 

```{r}
var.comp(meta_all_samples)
```

## Subgroup Analyses

```{r}
meta_all_samples_sf <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ sf)

meta_all_samples_sf 
```

```{r}
var.comp(meta_all_samples_sf)
```

```{r}
p_meta_all_samples_sf <- ggplot(studies_es_chronic) +
      geom_abline(intercept = meta_all_samples_sf |> 
                tidy() |> 
                filter(term == "intercept") |> 
                pull(estimate), 
              slope = meta_all_samples_sf |> 
                tidy() |> 
                filter(term == "sf") |> 
                pull(estimate), 
              color = "grey") +
  geom_point(aes(x = sf, y = es), shape = 1, alpha = .5) +
  labs(x = LABEL_SPATIAL_FREQUENCY, y = LABEL_EFFECT_SIZE) +
  theme_classic() +
  theme(axis.line = element_line(linewidth = WIDTH_AXIS),
        axis.ticks = element_line(linewidth = WIDTH_AXIS))

p_meta_all_samples_sf
```


```{r}
meta_all_samples_tf <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ tf)

meta_all_samples_tf
```

```{r}
p_meta_all_samples_tf <- ggplot(studies_es_chronic) +
      geom_abline(intercept = meta_all_samples_tf |> 
                tidy() |> 
                filter(term == "intercept") |> 
                pull(estimate), 
              slope = meta_all_samples_tf |> 
                tidy() |> 
                filter(term == "tf") |> 
                pull(estimate), 
              color = "grey") +
  geom_point(aes(x = tf, y = es), shape = 1, alpha = .5) +
  labs(x = LABEL_TEMPORAL_FREQUENCY, y = LABEL_EFFECT_SIZE) +
  theme_classic() +
  theme(axis.line = element_line(linewidth = WIDTH_AXIS),
        axis.ticks = element_line(linewidth = WIDTH_AXIS))

p_meta_all_samples_tf
```



## Figure tf and sf

```{r}
p_all_samples_tf_sf <- plot_grid(
  p_meta_all_samples_sf,
  p_meta_all_samples_tf, 
  labels = "AUTO"
)

ggsave("figures/paper/p_all_samples_tf_sf.pdf",
       p_all_samples_tf_sf, 
       width = 4.9, 
       height = 2.45
       )

ggsave("figures/paper/p_all_samples_tf_sf.png",
       p_all_samples_tf_sf, 
       width = 4.9, 
       height = 2.45
       )
```


## CPZ

```{r}
meta_all_samples_cpz <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ cpz)

meta_all_samples_cpz
```




## Testing the interaction of dv with spatial frequency


```{r}
studies_one_sample_chronic |> 
  group_by(dv) |> 
  count()
```

```{r}
sf_dv_interact <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic,
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ sf * dv) 
sf_dv_interact
```

```{r}
anova(sf_dv_interact, btt = 5:6)
```

```{r}
sf_dv_interact_only_cs <- rma.mv(yi = es, 
                   V = var, 
                   slab = study,
                   data = studies_es_chronic |> 
                     filter(dv != "thre"),
                   random = ~ 1 | study/study_id, 
                   test = "t", 
                   method = "REML", 
                   mods = ~ sf * dv) 

sf_dv_interact_only_cs
```

```{r}
anova(sf_dv_interact_only_cs, btt = 4)
```

